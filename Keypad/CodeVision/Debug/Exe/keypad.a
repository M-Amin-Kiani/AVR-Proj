;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;#define C0 PIND.4
;#define C1 PIND.5
;#define C2 PIND.6
;#define C3 PIND.7
;
;
;// Declare your global variables here
;
;char keypad(void);
;flash char shift[4] = {0xFE, 0xFD, 0xFB, 0xF7}  ; // Why char ?? Cuz it is 8 bits !!!
;  //0b111 0111
;flash char keypad_layout[4][4] = {'7','8','9','/','4','5','6','*','1','2','3','-','C','0','=','+'};
;
;interrupt [EXT_INT2] void ext_int2_isr(void)
; 0000 0014 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0015  char charecter ;
; 0000 0016       charecter = keypad();
;PCODE: $0000000F VOL: 0
;	charecter -> R17
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0017        PORTD  = 0xF0;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0018          if(charecter == 'C') lcd_clear();
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0019          else
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001A              lcd_putchar(charecter);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001B 
; 0000 001C }
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;void main(void)
; 0000 001F {
;PCODE: $00000021 VOL: 0
; 0000 0020 // Declare your local variables here
; 0000 0021 
; 0000 0022     PORTD  = 0xF0;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0023     DDRD = 0x0F ;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0024     lcd_init(16);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0025 // External Interrupt(s) initialization
; 0000 0026 // INT0: Off
; 0000 0027 // INT1: Off
; 0000 0028 // INT2: On
; 0000 0029 // INT2 Mode: Falling Edge
; 0000 002A GICR|=(0<<INT1) | (0<<INT0) | (1<<INT2);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 002B MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002C MCUCSR=(0<<ISC2);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 002D GIFR=(0<<INTF1) | (0<<INTF0) | (1<<INTF2)  ;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 002E 
; 0000 002F // Global enable interrupts
; 0000 0030 #asm("sei")
;PCODE: $00000031 VOL: 0
	sei
;PCODE: $00000032 VOL: 0
; 0000 0031 
; 0000 0032 
; 0000 0033 
; 0000 0034 while (1)
;PCODE: $00000033 VOL: 0
; 0000 0035       {
; 0000 0036 
; 0000 0037 
; 0000 0038       }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0039 }
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;
;char keypad(void)
; 0000 003C {
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 003D int row = 0 , column = -1 , position = 0   ;
; 0000 003E //while(1)
; 0000 003F //{
; 0000 0040 
; 0000 0041  for ( row = 0 ; row < 4 ; row ++ )
;PCODE: $0000003B VOL: 0
;	row -> R16,R17
;	column -> R18,R19
;	position -> R20,R21
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0042  {
; 0000 0043      PORTD = shift[row];
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0044      if(C0 == 0) {column = 0 ;}
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0045      if(C1 == 0) {column = 1 ;}
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0046      if(C2 == 0) {column = 2 ;}
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0047      if(C3 == 0) {column = 3 ;}
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0048      if(column != -1)
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0049          {
; 0000 004A             position = row * 4 + column ;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 004B             //lcd_putchar(keypad_layout[position]);
; 0000 004C             //lcd_putchar(keypad_layout[row][column]) ;
; 0000 004D 
; 0000 004E             while(C0 == 0 ){;}
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 004F             while(C1 == 0 ){;}
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0050             while(C2 == 0 ){;}
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0051             while(C3 == 0 ){;}
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0052             //return keypad_layout[position] ; // one dimensional array
; 0000 0053             return keypad_layout[row][column];
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0054             column = -1 ;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0055          }
; 0000 0056      delay_ms(50);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0057  }
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0058  //}
; 0000 0059 }
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
